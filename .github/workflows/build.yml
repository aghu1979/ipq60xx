name: 🔨 OpenWrt 固件编译系统 (分层构建)

on:
  schedule:
    # 北京时间每周五0点 (UTC时间周四16点)
    - cron: '0 16 * * 4'
  workflow_dispatch:
    inputs:
      branch:
        description: '选择分支 (留空编译全部)'
        required: false
        type: choice
        options:
          - ''
          - openwrt
          - immwrt
          - libwrt
      config:
        description: '选择配置 (留空编译全部)'
        required: false
        type: choice
        options:
          - ''
          - Pro
          - Max
          - Ultra

env:
  UBUNTU_VERSION: 22.04
  REPO_OPENWRT: https://github.com/openwrt/openwrt.git
  REPO_IMMWRT: https://github.com/immortalwrt/immortalwrt.git
  REPO_LIBWRT: https://github.com/openwrt/openwrt.git

jobs:
  # ========================================
  # 阶段一：准备并缓存基础环境
  # ========================================
  prepare-base-environments:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        branch: [openwrt, immwrt, libwrt]
    outputs:
      openwrt-hash: ${{ steps.set_hash.outputs.openwrt-hash }}
      immwrt-hash: ${{ steps.set_hash.outputs.immwrt-hash }}
      libwrt-hash: ${{ steps.set_hash.outputs.libwrt-hash }}
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🧹 清理磁盘空间
        uses: easimon/maximize-build-space@master
        with:
          # 保留2GB空间
          reserve-space: 2
          # 删除.NET
          remove-dotnet: 'true'
          # 删除Android SDK
          remove-android: 'true'
          # 删除Haskell
          remove-haskell: 'true'
          # 删除其他大文件
          remove-large-files: 'true'

      - name: 🌍 设置环境变量
        run: |
          echo "REPO_SHORT=${{ matrix.branch }}" >> $GITHUB_ENV
          echo "SOC_NAME=ipq60xx" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
          
          if [[ "${{ matrix.branch }}" == "openwrt" ]]; then
            echo "REPO_URL=${{ env.REPO_OPENWRT }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.branch }}" == "immwrt" ]]; then
            echo "REPO_URL=${{ env.REPO_IMMWRT }}" >> $GITHUB_ENV
          else
            echo "REPO_URL=${{ env.REPO_LIBWRT }}" >> $GITHUB_ENV
          fi

      - name: 🔐 计算基础配置哈希
        id: calc_hash
        run: |
          HASH=$(sha256sum configs/base_${SOC_NAME}.config configs/base_${REPO_SHORT}.config | sha256sum | cut -d' ' -f1)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "${{ matrix.branch }}=${{ steps.calc_hash.outputs.hash }}" >> ${{ github.workspace }}/hashes.txt

      - name: 💾 缓存基础环境
        uses: actions/cache@v4
        with:
          path: |
            build/${{ matrix.branch }}/
            dl/
            feeds/
          key: base-${{ matrix.branch }}-${{ steps.calc_hash.outputs.hash }}
          restore-keys: |
            base-${{ matrix.branch }}-

      - name: 🚀 准备基础环境
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "📦 为 ${{ matrix.branch }} 准备基础环境..."
          chmod +x scripts/*.sh
          ./scripts/build.sh prepare-base

      - name: 📤 上传哈希文件
        if: matrix.branch == 'libwrt'
        uses: actions/upload-artifact@v4
        with:
          name: hashes-file
          path: ${{ github.workspace }}/hashes.txt

  # ========================================
  # 阶段二：在基础环境上编译最终固件
  # ========================================
  build-firmware:
    needs: prepare-base-environments
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        branch: [openwrt, immwrt, libwrt]
        config: [Pro, Max, Ultra]
    if: |
      (github.event.inputs.branch == '' || github.event.inputs.branch == matrix.branch) &&
      (github.event.inputs.config == '' || github.event.inputs.config == matrix.config)
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4

      - name: 🧹 清理磁盘空间
        uses: easimon/maximize-build-space@master
        with:
          # 保留2GB空间
          reserve-space: 2
          # 删除.NET
          remove-dotnet: 'true'
          # 删除Android SDK
          remove-android: 'true'
          # 删除Haskell
          remove-haskell: 'true'
          # 删除其他大文件
          remove-large-files: 'true'

      - name: 🌍 设置环境变量
        run: |
          echo "REPO_SHORT=${{ matrix.branch }}" >> $GITHUB_ENV
          echo "SOC_NAME=ipq60xx" >> $GITHUB_ENV
          echo "CONFIG_LEVEL=${{ matrix.config }}" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
          
          if [[ "${{ matrix.branch }}" == "openwrt" ]]; then
            echo "REPO_URL=${{ env.REPO_OPENWRT }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.branch }}" == "immwrt" ]]; then
            echo "REPO_URL=${{ env.REPO_IMMWRT }}" >> $GITHUB_ENV
          else
            echo "REPO_URL=${{ env.REPO_LIBWRT }}" >> $GITHUB_ENV
          fi

      - name: 📥 下载哈希文件
        uses: actions/download-artifact@v4
        with:
          name: hashes-file
          path: ${{ github.workspace }}

      - name: 🔍 读取对应分支的哈希值
        id: get_hash
        run: |
          HASH=$(grep "^${{ matrix.branch }}=" hashes.txt | cut -d'=' -f2)
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: 💾 恢复基础环境缓存
        uses: actions/cache@v4
        with:
          path: |
            build/${{ matrix.branch }}/
            dl/
            feeds/
          key: base-${{ matrix.branch }}-${{ steps.get_hash.outputs.hash }}

      - name: 🔨 编译固件
        run: |
          chmod +x scripts/*.sh
          ./scripts/build.sh build-firmware

      - name: 📊 显示系统资源使用情况
        if: always()
        run: |
          echo "=========================================="
          echo "📊 系统资源使用情况"
          echo "=========================================="
          df -h
          free -h
          echo "=========================================="

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.branch }}-${{ matrix.config }}
          path: |
            output/
            logs/
          retention-days: 7
